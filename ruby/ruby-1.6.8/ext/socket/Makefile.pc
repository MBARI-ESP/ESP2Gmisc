SHELL = /bin/sh

#### Start of system configuration section. ####

srcdir = /home/brent/ruby/ruby-1.6.8/ext/socket

topdir = /home/brent/ruby/ruby-1.6.8
hdrdir = /home/brent/ruby/ruby-1.6.8

CC = gcc

CFLAGS   = -fPIC -O2 -DHAVE_GETADDRINFO -DHAVE_SOCKADDR_STORAGE 
CPPFLAGS = -I$(topdir) -I$(hdrdir) -DHAVE_NETINET_TCP_H -DHAVE_NETINET_UDP_H -DHAVE_GETADDRINFO -DHAVE_GETNAMEINFO -DHAVE_SYS_UN_H -DHAVE_SOCKET -DHAVE_GETHOSTNAME  -Dss_family=__ss_family -Dss_len=__ss_len
DLDFLAGS =  -L/home/brent/ruby/ruby-1.6.8 -L${prefix}/lib 
LDSHARED = gcc -shared 

RUBY_INSTALL_NAME = ruby
RUBY_SO_NAME = 

prefix = /usr/local
exec_prefix = ${prefix}
libdir = ${exec_prefix}/lib
#pkglibdir = $(libdir)/$(RUBY_INSTALL_NAME)/1.6
pkglibdir = $(libdir)/ruby/1.6
archdir = $(pkglibdir)/i686-linux
target_prefix = 


#### End of system configuration section. ####

LOCAL_LIBS =  
LIBS = $(LIBRUBY_A) -lc
OBJS = socket.o
TARGET = socket
DLLIB = $(TARGET).so

RUBY = $(topdir)/miniruby -I$(topdir) -I$(hdrdir)/lib
RM = $(RUBY) -rftools -e "File::rm_f(*ARGV.map do|x|Dir[x]end.flatten.uniq)"

EXEEXT = 

all:		$(DLLIB)

clean:;		@$(RM) *.o *.so *.sl *.a $(DLLIB)
		@$(RM) *.ilk *.exp *.pdb *.bak $(CLEANFILES)

distclean:	clean
		@$(RM) Makefile extconf.h conftest.*
		@$(RM) core ruby$(EXEEXT) *~ $(DISTCLEANFILES)

realclean:	distclean

install:
	@$(RUBY) -r ftools -e 'File::makedirs(*ARGV)' $(DESTDIR)$(libdir) $(DESTDIR)$(pkglibdir) $(DESTDIR)$(archdir)$(target_prefix)

	@$(RUBY) -r ftools -e 'File::install(ARGV[0], ARGV[1], 0555, true)' $(DLLIB) $(DESTDIR)$(archdir)$(target_prefix)/$(DLLIB)


.cc.o:
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c $<
.cpp.o:
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c $<
.cxx.o:
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c $<
.C.o:
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c $<

.c.o:
	$(CC) $(CFLAGS) $(CPPFLAGS) -c $<
$(DLLIB): $(OBJS)
	$(LDSHARED) $(DLDFLAGS) -o $(DLLIB) $(OBJS) $(LIBS) $(LOCAL_LIBS)
###
socket.o : socket.c $(hdrdir)/ruby.h $(topdir)/config.h $(hdrdir)/defines.h $(hdrdir)/rubyio.h $(hdrdir)/rubysig.h sockport.h
getnameinfo.o: getnameinfo.c $(topdir)/config.h addrinfo.h sockport.h
getaddrinfo.o: getaddrinfo.c $(topdir)/config.h addrinfo.h sockport.h
