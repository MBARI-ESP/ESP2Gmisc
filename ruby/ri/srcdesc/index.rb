# Automatically generated....
raise 'Must be invoked by installation process' unless $opfile
aClass = MethodIndex.new({"year"=>["Time#year"], "fileno"=>["IO#fileno"], "to_proc"=>["Method#to_proc"], "quote"=>["Regexp::quote"], "gsub"=>["String#gsub", "Kernel::gsub"], "tr_s"=>["String#tr_s"], "wday"=>["Time#wday"], "~"=>["Regexp#~", "String#~"], "crypt"=>["String#crypt"], "squeeze"=>["String#squeeze"], "class_variables"=>["Module#class_variables"], "stop?"=>["Thread#stop?"], "grep"=>["Enumerable#grep"], "isatty"=>["IO#isatty"], "<,<=,>,>="=>["Module#<,<=,>,>="], "instance_eval"=>["Object#instance_eval"], "alive?"=>["Thread#alive?"], "caller"=>["Kernel::caller"], "==="=>["Array#===", "Module#===", "Object#===", "Range#===", "Regexp#===", "String#==="], "month"=>["Time#month"], "autoload"=>["Kernel::autoload"], "delete"=>["Array#delete", "Dir::delete", "File::delete", "Hash#delete", "String#delete"], "shift"=>["Array#shift", "Hash#shift"], "sort!"=>["Array#sort!"], "list"=>["Thread::list", "ThreadGroup#list"], "asctime"=>["Time#asctime"], "<=>"=>["Array#<=>", "Bignum#<=>", "File::Stat#<=>", "Fixnum#<=>", "Float#<=>", "Module#<=>", "String#<=>", "Time#<=>"], "methods"=>["Object#methods"], "abort_on_exception"=>["Thread::abort_on_exception", "Thread#abort_on_exception"], "last_match"=>["Regexp::last_match"], "to_s"=>["Array#to_s", "Bignum#to_s", "Fixnum#to_s", "Float#to_s", "Hash#to_s", "MatchData#to_s", "NilClass#to_s", "Object#to_s", "String#to_s", "Symbol#to_s", "Time#to_s"], "escape"=>["Regexp::escape"], "directory?"=>["File::Stat#directory?", "FileTest#directory?"], "display"=>["Object#display"], "yday"=>["Time#yday"], "select"=>["IO::select", "Enumerable#select", "Kernel::select"], "uniq!"=>["Array#uniq!"], "id"=>["Object#id"], "indexes"=>["Array#indexes", "Hash#indexes"], "wait"=>["Process::wait"], "each_object"=>["ObjectSpace::each_object"], "utc?"=>["Time#utc?"], "fork"=>["Thread::fork", "Kernel::fork", "Process::fork"], "read"=>["Dir#read", "IO#read"], "eql?"=>["Array#eql?", "Numeric#eql?", "Object#eql?"], "glob"=>["Dir::glob"], "egid"=>["Process::egid"], "setpgrp"=>["Process::setpgrp"], "status"=>["Thread#status"], "eof?"=>["IO#eof?"], "sync="=>["IO#sync="], "member?"=>["Hash#member?", "Enumerable#member?"], "flush"=>["IO#flush"], "sqrt"=>["Math::sqrt"], "rassoc"=>["Array#rassoc"], "each_key"=>["Hash#each_key"], "compact"=>["Array#compact"], "restore"=>["Marshal::restore"], "assoc"=>["Array#assoc"], "readline"=>["IO#readline", "Kernel::readline"], "wakeup"=>["Thread#wakeup"], "getpgrp"=>["Process::getpgrp"], "find"=>["Enumerable#find"], "name"=>["Module#name"], "nil?"=>["NilClass#nil?", "Object#nil?"], "unlink"=>["Dir::unlink", "File::unlink"], "gm"=>["Time::gm"], "format"=>["Kernel::format"], "at"=>["Array#at", "Time::at"], "compact!"=>["Array#compact!"], "ceil"=>["Float#ceil"], "chomp!"=>["String#chomp!", "Kernel::chomp!"], "flock"=>["File#flock"], "chop"=>["String#chop", "Kernel::chop"], "safe_level"=>["Thread#safe_level"], "sort"=>["Array#sort", "Hash#sort", "Enumerable#sort"], "chop!"=>["String#chop!", "Kernel::chop!"], "exists?"=>["FileTest#exists?"], "binmode"=>["IO#binmode"], "write"=>["IO#write"], "readlink"=>["File::readlink"], "atan2"=>["Math::atan2"], "pack"=>["Array#pack"], "--"=>["Array#--", "Time#--"], "trace_var"=>["Kernel::trace_var"], "enable"=>["GC::enable"], "upto"=>["Integer#upto", "String#upto"], "offset"=>["MatchData#offset"], "fill"=>["Array#fill"], "find_all"=>["Enumerable#find_all"], "empty?"=>["Array#empty?", "Hash#empty?", "String#empty?"], "__id__"=>["Object#__id__"], "coerce"=>["Numeric#coerce"], "isdst"=>["Time#isdst"], "priority"=>["Thread#priority"], "protected_instance_methods"=>["Module#protected_instance_methods"], "const_defined?"=>["Module#const_defined?"], "dirname"=>["File::dirname"], "value?"=>["Hash#value?"], "key?"=>["Hash#key?", "Thread#key?"], "last"=>["Array#last", "Range#last"], "default="=>["Hash#default="], "localtime"=>["Time#localtime"], "size?"=>["File::Stat#size?", "FileTest#size?"], "method_defined?"=>["Module#method_defined?"], "popen"=>["IO::popen"], "fetch"=>["Hash#fetch"], "each"=>["Array#each", "Dir#each", "Hash#each", "IO#each", "Range#each", "String#each", "Struct#each"], "extend_object"=>["Module#extend_object"], "chmod"=>["File::chmod", "File#chmod"], "sub!"=>["String#sub!", "Kernel::sub!"], "send"=>["Object#send"], "mtime"=>["File::mtime", "File#mtime", "File::Stat#mtime"], "size"=>["Array#size", "Bignum#size", "File::size", "File::Stat#size", "Fixnum#size", "Hash#size", "MatchData#size", "Range#size", "String#size", "Struct#size", "FileTest#size"], "catch"=>["Kernel::catch"], "inherited"=>["Class::inherited"], "setuid?"=>["File::Stat#setuid?", "FileTest#setuid?"], "tv_sec"=>["Time#tv_sec"], "taint"=>["Object#taint"], "lambda"=>["Kernel::lambda"], "file?"=>["File::Stat#file?", "FileTest#file?"], "ino"=>["File::Stat#ino"], "end"=>["MatchData#end", "Range#end"], "method_added"=>["Module#method_added"], "protected"=>["Module#protected"], "getpriority"=>["Process::getpriority"], "succ"=>["Integer#succ", "String#succ"], "downto"=>["Integer#downto"], "downcase!"=>["String#downcase!"], "chomp"=>["String#chomp", "Kernel::chomp"], "instance_methods"=>["Module#instance_methods"], "%"=>["String#%"], "backtrace"=>["Exception#backtrace"], "reject!"=>["Array#reject!", "Hash#reject!"], "&"=>["Array#&", "FalseClass#&", "NilClass#&", "TrueClass#&"], "putc"=>["IO#putc", "Kernel::putc"], "remove_const"=>["Module#remove_const"], "instance_of?"=>["Object#instance_of?"], "gid="=>["Process::gid="], "add"=>["ThreadGroup#add"], "flatten!"=>["Array#flatten!"], "readable_real?"=>["File::Stat#readable_real?", "FileTest#readable_real?"], "lineno="=>["IO#lineno="], "remove_method"=>["Module#remove_method"], "--@"=>["Numeric#--@"], "priority="=>["Thread#priority="], "rdev"=>["File::Stat#rdev"], "floor"=>["Float#floor"], "nonzero?"=>["Numeric#nonzero?"], "method_missing"=>["Object#method_missing"], "getwd"=>["Dir::getwd"], "public_instance_methods"=>["Module#public_instance_methods"], "between?"=>["Comparable#between?"], "+@"=>["Numeric#+@"], "*"=>["Array#*", "String#*"], "sticky?"=>["File::Stat#sticky?", "FileTest#sticky?"], "exist?"=>["FileTest#exist?"], "frexp"=>["Math::frexp"], "store"=>["Hash#store"], "+"=>["Array#+", "String#+", "Time#+"], "reverse"=>["Array#reverse", "String#reverse"], "umask"=>["File::umask"], "alias_method"=>["Module#alias_method"], "strip!"=>["String#strip!"], "Integer"=>["Kernel::Integer"], "ancestors"=>["Module#ancestors"], "type"=>["Object#type"], "gmt?"=>["Time#gmt?"], "euid="=>["Process::euid="], "-@"=>["Numeric#-@"], "-"=>["Array#-", "Time#-"], "garbage_collect"=>["GC#garbage_collect", "ObjectSpace::garbage_collect"], "nan?"=>["Float#nan?"], "open"=>["Dir::open", "File::open", "Kernel::open"], "chown"=>["File::chown", "File#chown"], "printf"=>["IO#printf", "Kernel::printf"], "include"=>["Module#include"], "attr"=>["Module#attr"], "instance_variables"=>["Object#instance_variables"], "delete_if"=>["Array#delete_if", "Hash#delete_if"], "swapcase!"=>["String#swapcase!"], "throw"=>["Kernel::throw"], "uid"=>["File::Stat#uid", "Process::uid"], "delete!"=>["String#delete!"], "system"=>["Kernel::system"], "waitpid"=>["Process::waitpid"], "sec"=>["Time#sec"], "expand_path"=>["File::expand_path"], "dump"=>["String#dump", "Marshal::dump"], "pass"=>["Thread::pass"], "nitems"=>["Array#nitems"], "writable_real?"=>["File::Stat#writable_real?", "FileTest#writable_real?"], "compile"=>["Regexp::compile"], "to_str"=>["String#to_str"], "close_read"=>["IO#close_read"], "close"=>["Dir#close", "IO#close"], "chr"=>["Integer#chr"], "rmdir"=>["Dir::rmdir"], "Arithmeticoperations"=>["Bignum#Arithmeticoperations", "Fixnum#Arithmeticoperations", "Float#Arithmeticoperations"], "abs"=>["Numeric#abs"], "swapcase"=>["String#swapcase"], "readlines"=>["IO::readlines", "IO#readlines", "Kernel::readlines"], "tan"=>["Math::tan"], "delete_at"=>["Array#delete_at"], "usec"=>["Time#usec"], "reject"=>["Hash#reject", "Enumerable#reject"], "puts"=>["IO#puts", "Kernel::puts"], "tr!"=>["String#tr!"], "step"=>["Integer#step"], "stat"=>["File::stat", "IO#stat"], "Array"=>["Kernel::Array"], "link"=>["File::link"], "id2name"=>["Fixnum#id2name", "Symbol#id2name"], "untrace_var"=>["Kernel::untrace_var"], "rindex"=>["Array#rindex", "String#rindex"], "=="=>["Array#==", "Hash#==", "Object#==", "Regexp#==", "String#==", "Struct#=="], "each_pair"=>["Hash#each_pair"], "append_features"=>["Module#append_features"], "setpgid"=>["Process::setpgid"], "exp"=>["Math::exp"], "test"=>["Kernel::test"], "block_given?"=>["Kernel::block_given?"], "attr_reader"=>["Module#attr_reader"], "index"=>["Array#index", "Hash#index", "String#index"], "nlink"=>["File::Stat#nlink"], "ldexp"=>["Math::ldexp"], "count"=>["String#count"], "capitalize!"=>["String#capitalize!"], "to_io"=>["IO#to_io"], "truncate"=>["File::truncate", "File#truncate"], "casefold?"=>["Regexp#casefold?"], "divmod"=>["Numeric#divmod"], "rehash"=>["Hash#rehash"], "Bitoperations"=>["Bignum#Bitoperations", "Fixnum#Bitoperations"], "slice!"=>["Array#slice!", "String#slice!"], "getpgid"=>["Process::getpgid"], "kind_of?"=>["Object#kind_of?"], "rjust"=>["String#rjust"], "lineno"=>["IO#lineno"], "pid"=>["IO#pid", "Process::pid"], "constants"=>["Module::constants", "Module#constants"], "sin"=>["Math::sin"], "sprintf"=>["Kernel::sprintf"], "at_exit"=>["Kernel::at_exit"], "flatten"=>["Array#flatten"], "private_methods"=>["Object#private_methods"], "kcode"=>["Regexp#kcode"], "sub"=>["String#sub", "Kernel::sub"], "setpriority"=>["Process::setpriority"], "close_write"=>["IO#close_write"], "blockdev?"=>["File::Stat#blockdev?", "FileTest#blockdev?"], "stop"=>["Thread::stop"], "mktime"=>["Time::mktime"], "round"=>["Float#round"], "concat"=>["Array#concat", "String#concat"], "value"=>["Thread#value"], "ioctl"=>["IO#ioctl"], "chdir"=>["Dir::chdir"], "syswrite"=>["IO#syswrite"], "ungetc"=>["IO#ungetc"], "equal?"=>["Object#equal?"], "tr_s!"=>["String#tr_s!"], "srand"=>["Kernel::srand"], "each_line"=>["IO#each_line", "String#each_line"], "executable?"=>["File::Stat#executable?", "FileTest#executable?"], "writable?"=>["File::Stat#writable?", "FileTest#writable?"], "attr_writer"=>["Module#attr_writer"], "members"=>["Struct::members", "Struct#members"], "slice"=>["Array#slice", "String#slice"], "arity"=>["Method#arity", "Proc#arity"], "upcase!"=>["String#upcase!"], "lstat"=>["File::lstat", "File#lstat"], "pipe"=>["IO::pipe"], "binding"=>["Kernel::binding"], "[]="=>["Array#[]=", "Hash#[]=", "String#[]=", "Struct#[]=", "Thread#[]="], "exclude_end?"=>["Range#exclude_end?"], "tv_usec"=>["Time#tv_usec"], "superclass"=>["Class#superclass"], "foreach"=>["Dir::foreach", "IO::foreach"], "map!"=>["Array#map!"], "sum"=>["String#sum"], "map"=>["Enumerable#map"], "module_function"=>["Module#module_function"], "pwd"=>["Dir::pwd"], "blksize"=>["File::Stat#blksize"], "mkdir"=>["Dir::mkdir"], "clear"=>["Array#clear", "Hash#clear"], "oct"=>["String#oct"], "mday"=>["Time#mday"], "executable_real?"=>["File::Stat#executable_real?", "FileTest#executable_real?"], "nesting"=>["Module::nesting"], "set_backtrace"=>["Exception#set_backtrace"], "wait2"=>["Process::wait2"], "run"=>["Thread#run"], "pos="=>["IO#pos="], "exception"=>["Exception::exception", "Exception#exception"], "inspect"=>["Object#inspect", "Symbol#inspect"], "syscall"=>["Kernel::syscall"], "class_eval"=>["Module#class_eval"], "symlink"=>["File::symlink"], "rename"=>["File::rename"], "pop"=>["Array#pop"], "_id2ref"=>["ObjectSpace::_id2ref"], "String"=>["Kernel::String"], "disable"=>["GC::disable"], "min"=>["Time#min", "Enumerable#min"], "infinite?"=>["Float#infinite?"], "keys"=>["Hash#keys"], "pipe?"=>["File::Stat#pipe?", "FileTest#pipe?"], "chardev?"=>["File::Stat#chardev?", "FileTest#chardev?"], "gsub!"=>["String#gsub!", "Kernel::gsub!"], "load"=>["Kernel::load", "Marshal::load"], "module_eval"=>["Module#module_eval"], "values"=>["Hash#values", "Struct#values"], "print"=>["IO#print", "Kernel::print"], "main"=>["Thread::main"], "log"=>["Math::log"], "length"=>["Array#length", "Hash#length", "MatchData#length", "Range#length", "String#length", "Struct#length"], "pos"=>["IO#pos"], "max"=>["Enumerable#max"], "new"=>["Array::new", "Class::new", "Class#new", "Dir::new", "File::new", "Hash::new", "IO::new", "Module::new", "Proc::new", "Range::new", "Regexp::new", "String::new", "Struct::new", "Thread::new", "ThreadGroup::new", "Time::new"], "define_finalizer"=>["ObjectSpace::define_finalizer"], "first"=>["Array#first", "Range#first"], "pre_match"=>["MatchData#pre_match"], "critical"=>["Thread::critical"], "has_value?"=>["Hash#has_value?"], "exec"=>["Kernel::exec"], "mon"=>["Time#mon"], "private"=>["Module#private"], "uniq"=>["Array#uniq"], "center"=>["String#center"], "undefine_finalizer"=>["ObjectSpace::undefine_finalizer"], "const_set"=>["Module#const_set"], "gid"=>["File::Stat#gid", "Process::gid"], "replace"=>["Array#replace", "Hash#replace", "String#replace"], "join"=>["Array#join", "File::join", "Thread#join"], "socket?"=>["File::Stat#socket?", "FileTest#socket?"], "setgid?"=>["File::Stat#setgid?", "FileTest#setgid?"], "mode"=>["File::Stat#mode"], "unshift"=>["Array#unshift"], "tainted?"=>["Object#tainted?"], "match"=>["Regexp#match"], "tty?"=>["IO#tty?"], "blocks"=>["File::Stat#blocks"], "indices"=>["Array#indices", "Hash#indices"], "protected_methods"=>["Object#protected_methods"], "local"=>["Time::local"], "abort"=>["Kernel::abort"], "seek"=>["Dir#seek", "IO#seek"], "attr_accessor"=>["Module#attr_accessor"], "downcase"=>["String#downcase"], "now"=>["Time::now"], "sleep"=>["Kernel::sleep"], "^"=>["FalseClass#^", "NilClass#^", "TrueClass#^"], "freeze"=>["Object#freeze"], "default"=>["Hash#default"], "include?"=>["Array#include?", "Hash#include?", "String#include?", "Enumerable#include?"], "next"=>["Integer#next", "String#next"], "hour"=>["Time#hour"], "`"=>["Kernel::`"], "call"=>["Continuation#call", "Method#call", "Proc#call"], "remainder"=>["Numeric#remainder"], "intern"=>["String#intern"], "eval"=>["Kernel::eval"], "scan"=>["String#scan", "Kernel::scan"], "squeeze!"=>["String#squeeze!"], "critical="=>["Thread::critical="], "finite?"=>["Float#finite?"], "message"=>["Exception#message"], "each_index"=>["Array#each_index"], "is_a?"=>["Object#is_a?"], "sync"=>["IO#sync"], "each_with_index"=>["Enumerable#each_with_index"], "next!"=>["String#next!"], "strip"=>["String#strip"], "tr"=>["String#tr"], "start"=>["Thread::start", "GC::start"], "log10"=>["Math::log10"], "euid"=>["Process::euid"], "zone"=>["Time#zone"], "split"=>["File::split", "String#split", "Kernel::split"], "ftype"=>["File::ftype", "File::Stat#ftype"], "rewind"=>["Dir#rewind", "IO#rewind"], "raise"=>["Thread#raise", "Kernel::raise"], "hex"=>["String#hex"], "ctime"=>["File::ctime", "File#ctime", "File::Stat#ctime", "Time#ctime"], "path"=>["File#path"], "eof"=>["IO#eof"], "egid="=>["Process::egid="], "rand"=>["Kernel::rand"], "ljust"=>["String#ljust"], "iterator?"=>["Kernel::iterator?"], "getc"=>["IO#getc"], "basename"=>["File::basename"], "readchar"=>["IO#readchar"], "each_byte"=>["IO#each_byte", "String#each_byte"], "push"=>["Array#push"], "extend"=>["Object#extend"], "utime"=>["File::utime"], "proc"=>["Kernel::proc"], "has_key?"=>["Hash#has_key?"], "tell"=>["Dir#tell", "IO#tell"], "reopen"=>["IO#reopen"], "class"=>["Object#class"], "ppid"=>["Process::ppid"], "current"=>["Thread::current"], "each_value"=>["Hash#each_value"], "strftime"=>["Time#strftime"], "detect"=>["Enumerable#detect"], "uid="=>["Process::uid="], "waitpid2"=>["Process::waitpid2"], "exit"=>["Thread::exit", "Thread#exit", "Kernel::exit"], "to_ary"=>["Array#to_ary"], "loop"=>["Kernel::loop"], "clone"=>["IO#clone", "Module#clone", "Object#clone"], "singleton_methods"=>["Object#singleton_methods"], "integer?"=>["Integer#integer?", "Numeric#integer?"], "fail"=>["Kernel::fail"], "exit!"=>["Kernel::exit!", "Process::exit!"], "public"=>["Module#public"], "upcase"=>["String#upcase"], "method"=>["Object#method"], "symlink?"=>["File::Stat#symlink?", "FileTest#symlink?"], "begin"=>["MatchData#begin", "Range#begin"], "private_class_method"=>["Module#private_class_method"], "undef_method"=>["Module#undef_method"], "day"=>["Time#day"], "abort_on_exception="=>["Thread::abort_on_exception=", "Thread#abort_on_exception="], "readable?"=>["File::Stat#readable?", "FileTest#readable?"], "callcc"=>["Kernel::callcc"], "reverse_each"=>["Array#reverse_each"], "grpowned?"=>["File::Stat#grpowned?", "FileTest#grpowned?"], "dev"=>["File::Stat#dev"], "string"=>["MatchData#string"], "kill"=>["Thread::kill", "Thread#kill", "Process::kill"], "invert"=>["Hash#invert"], "chroot"=>["Dir::chroot"], "p"=>["Kernel::p"], "set_trace_func"=>["Kernel::set_trace_func"], "included_modules"=>["Module#included_modules"], "unpack"=>["String#unpack"], "entries"=>["Dir::entries", "Enumerable#entries"], "private_instance_methods"=>["Module#private_instance_methods"], "public_class_method"=>["Module#public_class_method"], "singleton_method_added"=>["Kernel::singleton_method_added"], "closed?"=>["IO#closed?"], "update"=>["Hash#update"], "atime"=>["File::atime", "File#atime", "File::Stat#atime"], "to_a"=>["Array#to_a", "Hash#to_a", "MatchData#to_a", "NilClass#to_a", "Object#to_a", "Struct#to_a", "Time#to_a", "Enumerable#to_a"], "times"=>["Integer#times", "Time::times"], "global_variables"=>["Kernel::global_variables"], "public_methods"=>["Object#public_methods"], "frozen?"=>["Object#frozen?"], "<<"=>["Array#<<", "IO#<<", "String#<<"], "[]"=>["Array::[]", "Array#[]", "Bignum#[]", "Dir::[]", "Fixnum#[]", "Hash::[]", "Hash#[]", "MatchData#[]", "Method#[]", "Proc#[]", "String#[]", "Struct#[]", "Thread#[]"], "local_variables"=>["Kernel::local_variables"], "require"=>["Kernel::require"], "reverse!"=>["Array#reverse!", "String#reverse!"], "collect"=>["Array#collect", "Enumerable#collect"], "gets"=>["IO#gets", "Kernel::gets"], "utc"=>["Time::utc", "Time#utc"], "untaint"=>["Object#untaint"], "dup"=>["Object#dup"], "post_match"=>["MatchData#post_match"], "source"=>["Regexp#source"], "capitalize"=>["String#capitalize"], "collect!"=>["Array#collect!"], "modulo"=>["Numeric#modulo"], "to_f"=>["Bignum#to_f", "Fixnum#to_f", "Float#to_f", "String#to_f", "Time#to_f"], "Float"=>["Kernel::Float"], "cos"=>["Math::cos"], "const_get"=>["Module#const_get"], "zero?"=>["File::Stat#zero?", "Numeric#zero?", "FileTest#zero?"], "=~"=>["Object#=~", "Regexp#=~", "String#=~"], "__send__"=>["Object#__send__"], "fcntl"=>["IO#fcntl"], "owned?"=>["File::Stat#owned?", "FileTest#owned?"], "sysread"=>["IO#sysread"], "respond_to?"=>["Object#respond_to?"], "gmtime"=>["Time#gmtime"], "Comparisons"=>["Comparable#Comparisons"], "to_i"=>["Bignum#to_i", "Fixnum#to_i", "Float#to_i", "IO#to_i", "NilClass#to_i", "String#to_i", "Symbol#to_i", "Time#to_i"], "|"=>["Array#|", "FalseClass#|", "NilClass#|", "TrueClass#|"], "hash"=>["Object#hash", "String#hash"], "succ!"=>["String#succ!"], "trap"=>["Kernel::trap"], "setsid"=>["Process::setsid"]})
File.open($opfile, "w") {|f| Marshal.dump(aClass, f) }
